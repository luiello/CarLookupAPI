# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: .NET

on:
  push:
    branches: [ "master", "main" ]
  pull_request:
    branches: [ "master", "main" ]

env:
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
  DOTNET_NOLOGO: true
  DOTNET_CLI_TELEMETRY_OPTOUT: 1

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        dotnet-version: ['9.0.x']
        # Future versions can be added here: ['9.0.x', '10.0.x']

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ matrix.dotnet-version }}

    - name: Cache NuGet packages
      uses: actions/cache@v4
      with:
        path: ~/.nuget/packages
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj', '**/*.fsproj', '**/*.vbproj') }}
        restore-keys: |
          ${{ runner.os }}-nuget-

    - name: Restore dependencies
      run: dotnet restore --verbosity minimal

    - name: Build solution
      run: dotnet build --no-restore --configuration Release --verbosity minimal

    - name: Run Unit Tests
      run: dotnet test tests/CarLookup.Tests.Unit/CarLookup.Tests.Unit.csproj --no-build --configuration Release --verbosity normal --logger trx --results-directory TestResults/Unit

    # TODO: Improve solution to run Integration Tests on Github Actions pipeline
    #- name: Run Integration Tests
    #  run: dotnet test tests/CarLookup.Tests.Integration/CarLookup.Tests.Integration.csproj --no-build --configuration Release --verbosity normal --logger trx --results-directory TestResults/Integration

    # TODO: Improve solution to run Acceptance Tests on Github Actions pipeline
    #- name: Run Acceptance Tests
    #  run: dotnet test tests/CarLookup.Tests.Acceptance/CarLookup.Tests.Acceptance.csproj --no-build --configuration Release --verbosity normal --logger trx --results-directory TestResults/Acceptance
    
    - name: Publish Test Results
      uses: EnricoMi/publish-unit-test-result-action@v2
      if: always()  # run this step even if previous step failed
      with:
        files: TestResults/**/*.trx
        check_name: "Test Results (.NET ${{ matrix.dotnet-version }})"
        comment_mode: create new
        fail_on: "test failures"

    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results-${{ matrix.dotnet-version }}
        path: TestResults/
        retention-days: 7

    - name: Test Summary
      if: always()
      run: |
        echo "## Test Results Summary" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        
        if find TestResults -name "*.trx" -type f | head -1 | grep -q .; then
          echo "✅ Test results generated successfully" >> $GITHUB_STEP_SUMMARY
          
          # Count test files
          UNIT_TESTS=$(find TestResults/Unit -name "*.trx" 2>/dev/null | wc -l || echo "0")
          INTEGRATION_TESTS=$(find TestResults/Integration -name "*.trx" 2>/dev/null | wc -l || echo "0")
          ACCEPTANCE_TESTS=$(find TestResults/Acceptance -name "*.trx" 2>/dev/null | wc -l || echo "0")
          
          echo "- Unit test files: $UNIT_TESTS" >> $GITHUB_STEP_SUMMARY
          echo "- Integration test files: $INTEGRATION_TESTS" >> $GITHUB_STEP_SUMMARY  
          echo "- Acceptance test files: $ACCEPTANCE_TESTS" >> $GITHUB_STEP_SUMMARY
        else
          echo "❌ No test results found" >> $GITHUB_STEP_SUMMARY
        fi

  security-scan:
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 9.0.x

    - name: Restore dependencies
      run: dotnet restore --verbosity minimal

    - name: Run security audit
      run: dotnet list package --vulnerable --include-transitive || true

    - name: Check for outdated packages
      run: dotnet list package --outdated || true
